library(deSolve)
library(tidyverse)
library("pracma")

theme_set(theme_bw())



################################### DIPs introduced at t = 0 #############

beta_V = 2
beta_D = 3
delta_B = 1
delta_V = 1 
delta_D = 1

k_IV = 1  
k_IB = 1
k_ID = 1
k_AV = 1
k_AB = 1
k_AD = 1
s_IV = 0.1
s_IB = 0.1
s_ID = 0.1
d_I = 0.5  
s_A = 5



parameters <- c(beta_V = beta_V, beta_D = beta_D, delta_B = delta_B, delta_V = delta_V, delta_D = delta_D,
                k_IV = k_IV, k_IB = k_IB, k_ID = k_ID, s_z = s_z, k_AV = k_AV, k_AB = k_AB, k_AD = k_AD,
                s_IV = s_IV, s_IB = s_IB, s_ID = s_ID, s_A = s_A, d_I = d_I) 



state <- c(V = 0.01, D = 0.1, B = 0.0, E=0.89, I = 0.02, A = 0.02)


times <- seq(0,30,by=0.1)



model <- function(t, state, parameters) {
  with(as.list(c(state, parameters)), {
   
    dV <- beta_V * V * E - beta_D * B * V - delta_V * V - k_IV * I * V - k_AV * A * V
    dB <- beta_D * B * V + beta_V * V * D - delta_B * B - k_IB * I * B - k_AB * A * B
    dD <- beta_D * B * E - beta_V * V * D - delta_D * D - k_ID * I * D - k_AD * A * D
    dE <- (-dB -dV -dD)
    dI <- (1-I) * (s_IV * V + s_IB * B + s_ID * D) - d_I * I
    dA <- s_A * A * I
    
    return(list(c(dV , dD, dB, dE, dI, dA)))
    
  })
}


out <- as.data.frame(ode(y = state, times = times, func = model, parms = parameters))

trapz(times,out$V)
max(out$V)

out <- pivot_longer(out, 2:7)
head(out)
out$name <- factor(out$name, levels = c("B","D","E","V","I","A"))

p1 <- ggplot(out, aes(x = time, y = value, group = name, color = name)) + geom_line(size = 1) + 
  scale_color_manual(labels = c("B","D","E", "V","I","A"),name = "something", values = c( "blue", "green","black", "red", "orange", "purple")) +
  labs(x = "time", y = "Cell frequencies") + ylim(0,1) + ggtitle("(A) DIPs (t = 0)") + theme(legend.position="left")
p1 <- p1 + theme(legend.title = element_blank()) + theme(text = element_text(size = 15)) + theme(axis.title.x=element_blank(),
                                                                                                 axis.text.x=element_blank(),
                                                                                                 axis.ticks.x=element_blank()) #+ geom_area(fill = "red")
p1 <- p1 + annotate("text", x=25, y=0.87, label= "AUC = 3.83") +
  annotate("text", x=25, y=0.8, label= "maxV = 0.0.4")
p1 

############## DIPs introduced at t = 5 ##############

model <- function(t, state, parameters) {
  with(as.list(c(state, parameters)), {
    
    dV <- beta_V * V * E - beta_D * B * V - delta_V * V - k_IV * I * V - k_AV * A * V
    dB <- beta_D * B * V + beta_V * V * D - delta_B * B - k_IB * I * B - k_AB * A * B
    dD <- beta_D * B * E - beta_V * V * D - delta_D * D - k_ID * I * D - k_AD * A * D
    dE <- (-dB -dV -dD)
    dI <- (1-I) * (s_IV * V + s_IB * B + s_ID * D) - d_I * I
    dA <- s_A * A * I
    
    return(list(c(dV , dD, dB, dE, dI, dA)))
    
  })
}


beta_V = 2
beta_D = 3
delta_B = 1
delta_V = 1 
delta_D = 1

k_IV = 1  
k_IB = 1
k_ID = 1
k_AV = 1
k_AB = 1
k_AD = 1
s_IV = 0.1
s_IB = 0.1
s_ID = 0.1
d_I = 0.5  
s_A = 5

parameters <- c(beta_V = beta_V, beta_D = beta_D, delta_B = delta_B, delta_V = delta_V, delta_D = delta_D,
                k_IV = k_IV, k_IB = k_IB, k_ID = k_ID, s_z = s_z, k_AV = k_AV, k_AB = k_AB, k_AD = k_AD,
                s_IV = s_IV, s_IB = s_IB, s_ID = s_ID, s_A = s_A, d_I = d_I) 



state <- c(V = 0.01, D = 0.0, B = 0.0, E=0.99, I = 0.02, A = 0.02)


times <- seq(0,30,by=0.1)

step_size_grid <- 0.05
step_size_times <- 0.1


results <- as.data.frame(ode(y = state, times = times, func = model, 
                             parms = parameters))
head(results)

  
  y <- which(results$time == 5)
  
  df1 <- results[1:(y-1),]
  
  
  M <- 30
  
  state <- c(V = results[y,]$V, D = 0.1, B = 0, E = results[y,]$E-0.1, I = results[y,]$I, A = results[y,]$A)
  times <- seq(df1$time[y-1]+step_size_times,M,by=step_size_times) 
  
  df2 <- as.data.frame(ode(y = state, times = times, func = model, 
                           parms = parameters))
  df <- rbind(df1, df2)
  
  head(df)
  
  trapz(df$time,df$V)
  max(df$V)
  
  out <- pivot_longer(df, 2:7)
  head(out)
  out$name <- factor(out$name, levels = c("B","D","E","V","I","A"))
  
  p2 <- ggplot(out, aes(x = time, y = value, group = name, color = name)) + geom_line(size = 1) + 
    scale_color_manual(labels = c("B","D","E", "V","I","A"),name = "something", values = c( "blue", "green","black", "red", "orange", "purple")) +
    labs(x = "time", y = "cell freq") + ylim(0,1) + ggtitle("(B) DIPs (t = 5)") + theme(plot.title = element_text(size = 15))
  p2 <- p2 + theme(legend.title = element_blank()) + theme(legend.position = "left") + theme(text = element_text(size = 15)) + 
             theme(axis.title=element_blank(),
            axis.text=element_blank(),
            axis.ticks=element_blank())
  p2 <- p2 + annotate("text", x=25, y=0.87, label= "AUC = 3.43") +
    annotate("text", x=25, y=0.8, label= "maxV = 0.35")
  p2
  
  
  ############## DIPs introduced at t = 7.5 ############
  
  model <- function(t, state, parameters) {
    with(as.list(c(state, parameters)), {
      
      dV <- beta_V * V * E - beta_D * B * V - delta_V * V - k_IV * I * V - k_AV * A * V
      dB <- beta_D * B * V + beta_V * V * D - delta_B * B - k_IB * I * B - k_AB * A * B
      dD <- beta_D * B * E - beta_V * V * D - delta_D * D - k_ID * I * D - k_AD * A * D
      dE <- (-dB -dV -dD)
      dI <- (1-I) * (s_IV * V + s_IB * B + s_ID * D) - d_I * I
      dA <- s_A * A * I
      
      return(list(c(dV , dD, dB, dE, dI, dA)))
      
    })
  }
  
  
  beta_V = 2
  beta_D = 3
  delta_B = 1
  delta_V = 1 
  delta_D = 1
  
  k_IV = 1  
  k_IB = 1
  k_ID = 1
  k_AV = 1
  k_AB = 1
  k_AD = 1
  s_IV = 0.1
  s_IB = 0.1
  s_ID = 0.1
  d_I = 0.5  
  s_A = 5
  
  parameters <- c(beta_V = beta_V, beta_D = beta_D, delta_B = delta_B, delta_V = delta_V, delta_D = delta_D,
                  k_IV = k_IV, k_IB = k_IB, k_ID = k_ID, s_z = s_z, k_AV = k_AV, k_AB = k_AB, k_AD = k_AD,
                  s_IV = s_IV, s_IB = s_IB, s_ID = s_ID, s_A = s_A, d_I = d_I) 
  
  
  
  state <- c(V = 0.01, D = 0.0, B = 0.0, E=0.99, I = 0.02, A = 0.02)
  
  
  times <- seq(0,30,by=0.1)
  
  step_size_grid <- 0.05
  step_size_times <- 0.1
  
  
  results <- as.data.frame(ode(y = state, times = times, func = model, 
                               parms = parameters))
  head(results)
  
  
  y <- which(results$time == 7.5)
  
  df1 <- results[1:(y-1),]
  
  
  M <- 30
  
  state <- c(V = results[y,]$V, D = 0.1, B = 0, E = results[y,]$E-0.1, I = results[y,]$I, A = results[y,]$A)
  times <- seq(df1$time[y-1]+step_size_times,M,by=step_size_times) 
  
  df2 <- as.data.frame(ode(y = state, times = times, func = model, 
                           parms = parameters))
  df <- rbind(df1, df2)
  
  head(df)
  
  trapz(df$time,df$V)
  max(df$V)
  
  out <- pivot_longer(df, 2:7)
  head(out)
  out$name <- factor(out$name, levels = c("B","D","E","V","I","A"))
  
  p3 <- ggplot(out, aes(x = time, y = value, group = name, color = name)) + geom_line(size = 1) + 
    scale_color_manual(labels = c("B","D","E", "V","I","A"),name = "something", values = c( "blue", "green","black", "red", "orange", "purple")) +
    labs(x = "time", y = "Cell frequencies") + ylim(0,1) + ggtitle("(C) DIPs (t = 7.5)") + theme(plot.title = element_text(size = 15))
  p3 <- p3 + theme(legend.title = element_blank()) + theme(legend.position = "left") + theme(text = element_text(size = 15))
  p3 <- p3 + annotate("text", x=25, y=0.87, label= "AUC = 3.85") +
    annotate("text", x=25, y=0.8, label= "maxV = 0.43")
  p3
  
  ########### DIPs introduced at t = 12 ##############
  
  model <- function(t, state, parameters) {
    with(as.list(c(state, parameters)), {
      
      dV <- beta_V * V * E - beta_D * B * V - delta_V * V - k_IV * I * V - k_AV * A * V
      dB <- beta_D * B * V + beta_V * V * D - delta_B * B - k_IB * I * B - k_AB * A * B
      dD <- beta_D * B * E - beta_V * V * D - delta_D * D - k_ID * I * D - k_AD * A * D
      dE <- (-dB -dV -dD)
      dI <- (1-I) * (s_IV * V + s_IB * B + s_ID * D) - d_I * I
      dA <- s_A * A * I
      
      return(list(c(dV , dD, dB, dE, dI, dA)))
      
    })
  }
  
  
  beta_V = 2
  beta_D = 3
  delta_B = 1
  delta_V = 1 
  delta_D = 1
  
  k_IV = 1  
  k_IB = 1
  k_ID = 1
  k_AV = 1
  k_AB = 1
  k_AD = 1
  s_IV = 0.1
  s_IB = 0.1
  s_ID = 0.1
  d_I = 0.5  
  s_A = 5
  
  parameters <- c(beta_V = beta_V, beta_D = beta_D, delta_B = delta_B, delta_V = delta_V, delta_D = delta_D,
                  k_IV = k_IV, k_IB = k_IB, k_ID = k_ID, s_z = s_z, k_AV = k_AV, k_AB = k_AB, k_AD = k_AD,
                  s_IV = s_IV, s_IB = s_IB, s_ID = s_ID, s_A = s_A, d_I = d_I) 
  
  
  
  state <- c(V = 0.01, D = 0.0, B = 0.0, E=0.99, I = 0.02, A = 0.02)
  
  
  times <- seq(0,30,by=0.1)
  
  step_size_grid <- 0.05
  step_size_times <- 0.1
  
  
  results <- as.data.frame(ode(y = state, times = times, func = model, 
                               parms = parameters))
  head(results)
  
  
  y <- which(results$time == 12)
  
  df1 <- results[1:(y-1),]
  
  
  M <- 30
  
  state <- c(V = results[y,]$V, D = 0.1, B = 0, E = results[y,]$E-0.1, I = results[y,]$I, A = results[y,]$A)
  times <- seq(df1$time[y-1]+step_size_times,M,by=step_size_times) 
  
  df2 <- as.data.frame(ode(y = state, times = times, func = model, 
                           parms = parameters))
  df <- rbind(df1, df2)
  head(df)
  
  trapz(df$time,df$V)
  max(df$V)
  
  out <- pivot_longer(df, 2:7)
  head(out)
  out$name <- factor(out$name, levels = c("B","D","E","V","I","A"))
  
  p4 <- ggplot(out, aes(x = time, y = value, group = name, color = name)) + geom_line(size = 1) + 
    scale_color_manual(labels = c("B","D","E", "V","I","A"),name = "something", values = c( "blue", "green","black", "red", "orange", "purple")) +
    labs(x = "time", y = "Cell frequencies") + ylim(0,1) + ggtitle("(D) DIPs (t = 12)") + theme(plot.title = element_text(size = 15))
  p4 <- p4 + theme(legend.title = element_blank()) + theme(legend.position = "left") + theme(text = element_text(size = 15)) + 
    theme(axis.title.y=element_blank(),
          axis.text.y=element_blank(),
          axis.ticks.y=element_blank())
  p4 <- p4 + annotate("text", x=25, y=0.87, label= "AUC = 4.57") +
    annotate("text", x=25, y=0.8, label= "maxV = 0.43")
  p4
  
  
  library(gridExtra)
  grid.arrange(p1,p2,p3,p4,ncol=2)
  
  
  

